package com.dubu.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BattlerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public BattlerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBattleIdIsNull() {
            addCriterion("battle_id is null");
            return (Criteria) this;
        }

        public Criteria andBattleIdIsNotNull() {
            addCriterion("battle_id is not null");
            return (Criteria) this;
        }

        public Criteria andBattleIdEqualTo(Integer value) {
            addCriterion("battle_id =", value, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdNotEqualTo(Integer value) {
            addCriterion("battle_id <>", value, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdGreaterThan(Integer value) {
            addCriterion("battle_id >", value, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("battle_id >=", value, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdLessThan(Integer value) {
            addCriterion("battle_id <", value, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdLessThanOrEqualTo(Integer value) {
            addCriterion("battle_id <=", value, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdIn(List<Integer> values) {
            addCriterion("battle_id in", values, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdNotIn(List<Integer> values) {
            addCriterion("battle_id not in", values, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdBetween(Integer value1, Integer value2) {
            addCriterion("battle_id between", value1, value2, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("battle_id not between", value1, value2, "battleId");
            return (Criteria) this;
        }

        public Criteria andBattleRankIsNull() {
            addCriterion("battle_rank is null");
            return (Criteria) this;
        }

        public Criteria andBattleRankIsNotNull() {
            addCriterion("battle_rank is not null");
            return (Criteria) this;
        }

        public Criteria andBattleRankEqualTo(Integer value) {
            addCriterion("battle_rank =", value, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankNotEqualTo(Integer value) {
            addCriterion("battle_rank <>", value, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankGreaterThan(Integer value) {
            addCriterion("battle_rank >", value, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankGreaterThanOrEqualTo(Integer value) {
            addCriterion("battle_rank >=", value, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankLessThan(Integer value) {
            addCriterion("battle_rank <", value, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankLessThanOrEqualTo(Integer value) {
            addCriterion("battle_rank <=", value, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankIn(List<Integer> values) {
            addCriterion("battle_rank in", values, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankNotIn(List<Integer> values) {
            addCriterion("battle_rank not in", values, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankBetween(Integer value1, Integer value2) {
            addCriterion("battle_rank between", value1, value2, "battleRank");
            return (Criteria) this;
        }

        public Criteria andBattleRankNotBetween(Integer value1, Integer value2) {
            addCriterion("battle_rank not between", value1, value2, "battleRank");
            return (Criteria) this;
        }

        public Criteria andRegdttmIsNull() {
            addCriterion("regdttm is null");
            return (Criteria) this;
        }

        public Criteria andRegdttmIsNotNull() {
            addCriterion("regdttm is not null");
            return (Criteria) this;
        }

        public Criteria andRegdttmEqualTo(Date value) {
            addCriterion("regdttm =", value, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmNotEqualTo(Date value) {
            addCriterion("regdttm <>", value, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmGreaterThan(Date value) {
            addCriterion("regdttm >", value, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmGreaterThanOrEqualTo(Date value) {
            addCriterion("regdttm >=", value, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmLessThan(Date value) {
            addCriterion("regdttm <", value, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmLessThanOrEqualTo(Date value) {
            addCriterion("regdttm <=", value, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmIn(List<Date> values) {
            addCriterion("regdttm in", values, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmNotIn(List<Date> values) {
            addCriterion("regdttm not in", values, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmBetween(Date value1, Date value2) {
            addCriterion("regdttm between", value1, value2, "regdttm");
            return (Criteria) this;
        }

        public Criteria andRegdttmNotBetween(Date value1, Date value2) {
            addCriterion("regdttm not between", value1, value2, "regdttm");
            return (Criteria) this;
        }

        public Criteria andTournamentIdIsNull() {
            addCriterion("tournament_id is null");
            return (Criteria) this;
        }

        public Criteria andTournamentIdIsNotNull() {
            addCriterion("tournament_id is not null");
            return (Criteria) this;
        }

        public Criteria andTournamentIdEqualTo(Integer value) {
            addCriterion("tournament_id =", value, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdNotEqualTo(Integer value) {
            addCriterion("tournament_id <>", value, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdGreaterThan(Integer value) {
            addCriterion("tournament_id >", value, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("tournament_id >=", value, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdLessThan(Integer value) {
            addCriterion("tournament_id <", value, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdLessThanOrEqualTo(Integer value) {
            addCriterion("tournament_id <=", value, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdIn(List<Integer> values) {
            addCriterion("tournament_id in", values, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdNotIn(List<Integer> values) {
            addCriterion("tournament_id not in", values, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdBetween(Integer value1, Integer value2) {
            addCriterion("tournament_id between", value1, value2, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andTournamentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("tournament_id not between", value1, value2, "tournamentId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdIsNull() {
            addCriterion("selected_mz_user_id is null");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdIsNotNull() {
            addCriterion("selected_mz_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdEqualTo(Integer value) {
            addCriterion("selected_mz_user_id =", value, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdNotEqualTo(Integer value) {
            addCriterion("selected_mz_user_id <>", value, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdGreaterThan(Integer value) {
            addCriterion("selected_mz_user_id >", value, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("selected_mz_user_id >=", value, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdLessThan(Integer value) {
            addCriterion("selected_mz_user_id <", value, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("selected_mz_user_id <=", value, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdIn(List<Integer> values) {
            addCriterion("selected_mz_user_id in", values, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdNotIn(List<Integer> values) {
            addCriterion("selected_mz_user_id not in", values, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdBetween(Integer value1, Integer value2) {
            addCriterion("selected_mz_user_id between", value1, value2, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andSelectedMzUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("selected_mz_user_id not between", value1, value2, "selectedMzUserId");
            return (Criteria) this;
        }

        public Criteria andOpenedIsNull() {
            addCriterion("opened is null");
            return (Criteria) this;
        }

        public Criteria andOpenedIsNotNull() {
            addCriterion("opened is not null");
            return (Criteria) this;
        }

        public Criteria andOpenedEqualTo(Boolean value) {
            addCriterion("opened =", value, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedNotEqualTo(Boolean value) {
            addCriterion("opened <>", value, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedGreaterThan(Boolean value) {
            addCriterion("opened >", value, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("opened >=", value, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedLessThan(Boolean value) {
            addCriterion("opened <", value, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedLessThanOrEqualTo(Boolean value) {
            addCriterion("opened <=", value, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedIn(List<Boolean> values) {
            addCriterion("opened in", values, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedNotIn(List<Boolean> values) {
            addCriterion("opened not in", values, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedBetween(Boolean value1, Boolean value2) {
            addCriterion("opened between", value1, value2, "opened");
            return (Criteria) this;
        }

        public Criteria andOpenedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("opened not between", value1, value2, "opened");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmIsNull() {
            addCriterion("pkey_regdttm is null");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmIsNotNull() {
            addCriterion("pkey_regdttm is not null");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmEqualTo(String value) {
            addCriterion("pkey_regdttm =", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmNotEqualTo(String value) {
            addCriterion("pkey_regdttm <>", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmGreaterThan(String value) {
            addCriterion("pkey_regdttm >", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmGreaterThanOrEqualTo(String value) {
            addCriterion("pkey_regdttm >=", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmLessThan(String value) {
            addCriterion("pkey_regdttm <", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmLessThanOrEqualTo(String value) {
            addCriterion("pkey_regdttm <=", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmLike(String value) {
            addCriterion("pkey_regdttm like", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmNotLike(String value) {
            addCriterion("pkey_regdttm not like", value, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmIn(List<String> values) {
            addCriterion("pkey_regdttm in", values, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmNotIn(List<String> values) {
            addCriterion("pkey_regdttm not in", values, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmBetween(String value1, String value2) {
            addCriterion("pkey_regdttm between", value1, value2, "pkeyRegdttm");
            return (Criteria) this;
        }

        public Criteria andPkeyRegdttmNotBetween(String value1, String value2) {
            addCriterion("pkey_regdttm not between", value1, value2, "pkeyRegdttm");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated do_not_delete_during_merge Tue Dec 24 17:24:28 KST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mz_profile_tournament_entry
     *
     * @mbggenerated Tue Dec 24 17:24:28 KST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}