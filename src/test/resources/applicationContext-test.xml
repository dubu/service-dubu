<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

   <!-- in-memory database and a datasource -->
    <jdbc:embedded-database id="dataSource">
        <jdbc:script location="classpath:database/jpetstore-hsqldb-schema.sql"/>
        <jdbc:script location="classpath:database/jpetstore-hsqldb-dataload.sql"/>
    </jdbc:embedded-database>

	<!-- MySQL -->
	<bean id="mysqlMyzzangDataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${myzzang.mysql.driverClassName}"
		p:url="${myzzang.mysql.url}"
		p:username="${myzzang.mysql.username}"
		p:password="${myzzang.mysql.password}"
		p:maxActive="${myzzang.mysql.maxActive}"
		p:maxWait="${myzzang.mysql.maxWait}"
		p:defaultAutoCommit="true"
		p:validationQuery="${myzzang.mysql.validationQuery}"
		p:testOnBorrow="${myzzang.mysql.testOnBorrow}"
		p:testWhileIdle="${myzzang.mysql.testWhileIdle}"
		p:timeBetweenEvictionRunsMillis="${myzzang.mysql.timeBetweenEvictionRunsMillis}"
		p:minEvictableIdleTimeMillis="${myzzang.mysql.minEvictableIdleTimeMillis}" />

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mysqlMyzzangDataSource" />
    </bean>

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="com.dubu.dao" />
    <!--<context:component-scan base-package="com.dubu.mem" />-->

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" name="sqlSessionFac">
        <property name="dataSource" ref="mysqlMyzzangDataSource" />
        <property name="mapperLocations" value="classpath:/mybatis/mapper/*.xml" />
        <property name="typeAliasesPackage" value="com.dubu.model" />
    </bean>

    <!-- define the SqlSessionFactory -->
    <bean id="memsqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" name="memsqlSessionFac">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:/mybatis/mem/*.xml" />
        <property name="typeAliasesPackage" value="com.dubu.model" />
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dubu.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFac"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dubu.mem" />
        <property name="sqlSessionFactoryBeanName" value="memsqlSessionFac"/>
    </bean>

	<bean id="environmentVariablesConfiguration"
		class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="passwordEnvName" value="APPPWD" />
	</bean>

	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="environmentVariablesConfiguration" />
		<property name="password" value="edu" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.jasypt.spring3.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="locations">
			<list>
				<value>classpath:properties/db.properties</value>
			</list>
		</property>
	</bean>
</beans>
